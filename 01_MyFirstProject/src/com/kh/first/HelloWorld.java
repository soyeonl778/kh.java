// 주석: 소스코드 내에 해당 소스코드에 대한 설명을 기술하고 싶을 때 사용,코드로 인식되지 않음
// 한줄짜리 주석
/*
 * 코드로 인식되지 않음
 * 엔터칠때마다
 * 한줄씩 주석이 계속 늘어남 
 */

/*
 * 자파 프로그래밍 순서
 * 1. Project 생성:  내가 만들 프로그램에서 필요로 하는 모든 소스코드와 환경설정 파일 등을 담고있는 최상위 폴더
 * 2. Package 생성: 소스코드를 보관하는 폴더 (찾아가기 쉽게 구분하거나 역할별로 분류를 하기 위해서) => src 폴더 내에 생성
 * 3. Class 생성: 소스코드의 최소 단위(곧, .java 파일이 됨)
 * 
 * 패키지 생성 시 주의사항
 * 1. 한 패키지 내에 동일한 이름의 패키지들을 생성 불가 (중복 불가)
 * 2. 패키지명은 항상 소문자로 적어야 함
 * 3. 패키지의 포함관계는 . 으로 나타낸다.
 * 4. 한 패키지 내에 동일한 이름의 클래스들을 생성 불가 (중복 불가)
 * 5. 서로 다른 패키지 내에는 동일한 이름의 클래스 또는 동일한 이름의 패키지가 존재 가능
 * 6. src 폴더에 패키지를 만들지 않고 곧바로 클래스를 생성하는게 가능하지만, 권장되지는 않음
 *    => "기본패키지에 클래스를 생성했다'라고 표현
 *    => 해달 클래스를 외부에서 꺼내다 쓸수 없기 때문에 권장되지 않음!
 *    
 * 패키지 생성 시 권장사항 (Spring framework 때 적용)
 * 1. 패키지는 적어도 세 단계 이상으로 만들 것
 * 2. 두 번째 레벨까지는 회사 도메인 주소 (손쉽게 웹사이트에 접속할 수 있는 고유한 주소) 의 역순으로 표기할 것
 * ex) www.google.com => com.google
 *     www.naver.com => com.naver
 */


package com.kh.first;

public class HelloWorld {


}
